---
import { Icon } from "astro-icon/components";
import { announcementConfig } from "../../config";
import WidgetLayout from "./WidgetLayout.astro";

const config = announcementConfig;

interface Props {
    class?: string;
    style?: string;
}
const className = Astro.props.class;
const style = Astro.props.style;
---

<!-- 组件显示现在由sidebarLayoutConfig统一控制，无需检查config.enable -->
<WidgetLayout 
    name={config.title || '公告'} 
    id="announcement"
    class={className} 
    style={style}
>
    <div>
        <!-- 公告栏内容 -->
        <div class="text-neutral-600 dark:text-neutral-300 leading-relaxed mb-3">
            {config.content}
        </div>
        
        <!-- 可选链接和关闭按钮 -->
        <div class="flex items-center justify-between gap-3">
            <div>
                {config.link && config.link.enable !== false && (
                    <a 
                        href={config.link.url} 
                        target={config.link.external ? "_blank" : "_self"}
                        rel={config.link.external ? "noopener noreferrer" : undefined}
                        class="btn-regular rounded-lg px-3 py-1.5 text-sm font-medium active:scale-95 transition-transform"
                    >
                        {config.link.text}

                    </a>
                )}
            </div>
            
            {config.closable && (
                <button 
                    class="close-announcement-btn btn-regular rounded-lg h-8 w-8 text-sm transition-all duration-200 ease-out relative overflow-hidden"
                    onclick="closeAnnouncement()"
                    aria-label="关闭公告"
                >
                    <Icon name="fa6-solid:xmark" class="text-sm transition-transform duration-200 ease-out" />
                </button>
            )}
        </div>
    </div>
</WidgetLayout>

<script>
    function closeAnnouncement() {
        // 通过data-id属性找到整个widget-layout元素
        const widgetLayout = document.querySelector('widget-layout[data-id="announcement"]') as HTMLElement;
        if (widgetLayout) {
            // 隐藏整个widget-layout元素
            widgetLayout.style.display = 'none';
            // 保存关闭状态到localStorage
            localStorage.setItem('announcementClosed', 'true');
        }
    }

    // 页面加载时检查是否已关闭
    document.addEventListener('DOMContentLoaded', function() {
        const widgetLayout = document.querySelector('widget-layout[data-id="announcement"]') as HTMLElement;
        if (widgetLayout && localStorage.getItem('announcementClosed') === 'true') {
            widgetLayout.style.display = 'none';
        }
    });

    // 使公告栏函数全局可用
    (window as any).closeAnnouncement = closeAnnouncement;
</script>

<style>
    /* MD3规范关闭按钮样式 */
    .close-announcement-btn {
        color: var(--primary); /* 使用主题色 */
    }
    
    .close-announcement-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: #dc2626; /* red-600 */
        opacity: 0;
        transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);
        border-radius: inherit;
    }
    
    .close-announcement-btn:hover {
        color: #991b1b; /* red-800 */
        background: rgba(220, 38, 38, 0.08); /* red-600/8% */
        transform: scale(1.05);
    }
    
    .close-announcement-btn:hover::before {
        opacity: 0.08;
    }
    
    .close-announcement-btn:hover .text-sm {
        transform: scale(1.1);
    }
    
    .close-announcement-btn:active {
        background: rgba(220, 38, 38, 0.12); /* red-600/12% */
        transform: scale(0.95);
    }
    
    .close-announcement-btn:active::before {
        opacity: 0.12;
    }
    
    /* 暗色主题适配 */
    :root.dark .close-announcement-btn {
        color: var(--primary); /* 使用主题色 */
    }
    
    :root.dark .close-announcement-btn::before {
        background: #f87171; /* red-400 */
    }
    
    :root.dark .close-announcement-btn:hover {
        color: #fca5a5; /* red-300 */
        background: rgba(248, 113, 113, 0.12); /* red-400/12% */
    }
    
    :root.dark .close-announcement-btn:hover::before {
        opacity: 0.12;
    }
    
    :root.dark .close-announcement-btn:active {
        background: rgba(248, 113, 113, 0.16); /* red-400/16% */
    }
    
    :root.dark .close-announcement-btn:active::before {
        opacity: 0.16;
    }
    
    /* 焦点状态 - 无障碍支持 */
    .close-announcement-btn:focus-visible {
        outline: 2px solid #dc2626;
        outline-offset: 2px;
    }
    
    :root.dark .close-announcement-btn:focus-visible {
        outline-color: #f87171;
    }
</style>